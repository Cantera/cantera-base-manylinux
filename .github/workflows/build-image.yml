name: Build Image from Dockerfile
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      manylinux_tag:
        description: 'Manylinux tag to build'
        required: true
        default: '2025-03-30-1e65560'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build image for ${{ matrix.arch }}
    runs-on: ubuntu-24.04${{ matrix.arch == 'aarch64' && '-arm64' || '' }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            plat: linux/amd64
          - arch: aarch64
            plat: linux/arm64
    steps:
    - uses: actions/checkout@v4
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/cantera/cantera-base-manylinux_2_28-${{ matrix.arch }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=branch
          type=ref,event=pr
    - name: Build args
      id: build-args
      run: |
        output="TARGET_ARCH=${{ matrix.arch }}"
        if [ -n "$MANYLINUX_TAG_INPUT" ]; then
          output+="\nMANYLINUX_TAG=$MANYLINUX_TAG_INPUT"
        fi
        echo "BUILD_ARGS=$output" >> $GITHUB_OUTPUT
      env:
        MANYLINUX_TAG_INPUT: ${{ github.event.inputs.manylinux_tag }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        platforms: ${{ matrix.plat }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ steps.build-args.outputs.BUILD_ARGS }}
        target: builder
        cache-from: type=gha
        cache-to: type=gha,mode=max
